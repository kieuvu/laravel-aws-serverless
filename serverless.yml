service: laravel

provider:
  name: aws
  # The AWS region in which to deploy (us-east-1 is the default)
  region: us-east-1
  # Environment variables
  environment:
    APP_ENV: production # Or use ${sls:stage} if you want the environment to match the stage
    QUEUE_CONNECTION: sqs
    SQS_QUEUE: ${construct:jobs.queueUrl}
    FILESYSTEM_DISK: s3
    FILESYSTEM_DISK_PUBLIC: s3
    AWS_BUCKET: !Ref Storage

  iam:
    role:
      statements:
        # Allow Lambda to read and write files in the S3 buckets
        - Effect: Allow
          Action: s3:*
          Resource:
            - !Sub "${Storage.Arn}" # the storage bucket
            - !Sub "${Storage.Arn}/*" # and everything inside

resources:
  Resources:
    # Create our S3 storage bucket using CloudFormation
    Storage:
      Type: AWS::S3::Bucket

package:
  # Files and directories to exclude from deployment
  patterns:
    - "!node_modules/**"
    - "!public/storage"
    - "!resources/assets/**"
    - "!storage/**"
    - "!tests/**"

functions:
  # This function runs the Laravel website/API
  web:
    handler: public/index.php
    runtime: php-81-fpm
    timeout: 28 # in seconds (API Gateway has a timeout of 29 seconds)
    events:
      - httpApi: "*"
    assets:
      "/js/*": public/js
      "/css/*": public/css
      "/favicon.ico": public/favicon.ico
      "/robots.txt": public/robots.txt
      # add here any file or directory that needs to be served from S3

  # This function lets us run artisan commands in Lambda
  artisan:
    handler: artisan
    runtime: php-81-console
    timeout: 720 # in seconds
    # Uncomment to also run the scheduler every minute
    #events:
    #    - schedule:
    #          rate: rate(1 minute)
    #          input: '"schedule:run"'

constructs:
  jobs:
    type: queue
    # This function runs Laravel Queues
    worker:
      handler: Bref\LaravelBridge\Queue\QueueHandler
      runtime: php-81
      timeout: 60 # seconds

plugins:
  - ./vendor/bref/bref
  - serverless-lift
